# syntax=docker/dockerfile:1.4

# 1) Deps stage
FROM oven/bun:1-alpine AS deps
WORKDIR /app

# Copy ONLY dependency files first for better caching
COPY package.json package-lock.json bun.lock ./
COPY apps/web/package.json ./apps/web/package.json
COPY apps/api/package.json ./apps/api/package.json
COPY libs/config/project.json ./libs/config/project.json
COPY libs/types/project.json ./libs/types/project.json
COPY tsconfig.base.json tsconfig.json ./

# Install dependencies with cache mount (ultra-fast!)
RUN --mount=type=cache,target=/root/.bun/install/cache \
    bun install

# NOW copy source code (changes here won't bust the install cache)
COPY libs ./libs
COPY apps/api ./apps/api
COPY apps/web ./apps/web

# 2) Build app (direct Next build, like the self-host example)
FROM deps AS builder
WORKDIR /app/apps/web
ENV NEXT_TELEMETRY_DISABLED=1
RUN bunx next build

# Normalize to /out (standard Next standalone layout)
RUN mkdir -p /out/apps/web/.next && \
    cp -R .next/standalone/* /out/ && \
    cp -R .next/static /out/apps/web/.next/static && \
    cp -R public /out/apps/web/public

# 3) Runner
FROM oven/bun:1-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

COPY --from=builder /out ./

EXPOSE 3000
CMD ["bun", "apps/web/server.js"]

